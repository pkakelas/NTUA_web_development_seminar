New corrections.

	έχεις SQL injection
	όταν μάθεις για ασφάλεια στο αντίστοιχο μάθημα, διόρθωσέ το
*	Θα μου άρεσε να έχεις consistency στο coding style σου.
*	https://github.com/pkakelas/NTUA_web_development_seminar/blob/master/4th%2C%205th%20exercise/footer.php
*	π.χ. εδώ είναι το μόνο αρχείο που έχεις κενό αμέως πριν το > ενός tag ή ας πούμε εδώ
*	https://github.com/pkakelas/NTUA_web_development_seminar/blob/master/4th%2C%205th%20exercise/title.php
*	δεν έχεις κενό πριν το ?> όπως θα περίμενε κανείς
*	αλλά σε άλλα αρχεία έχεις
*	στην αρχή της γραμμής
*	θα προτιμούσα επίσης σωστό indentation
*	ας πούμε στο αρχείο που σου δείχνω
*	θα σου πρότεινα να βάλεις μία αλλαγή γραμμής πριν τη λέξη function
*	και το } να βρίσκεται στο ίδιο βάθος με τη λέξη function
*	και όχι 5 επίπεδα πιο μέσα
*	ενώ το σώμα του function να βρίσκεται 1 επίπεδο μέσα
*	αυτό για όλα τα blocks κώδικα
*	π.χ. το if να βρίσκεται στο ίδιο επίπεδ με το } που το κλείνει
*	και το σώμα εντός του if να είναι ένα επίπεδο πιο μέσα
*	π.χ. όπως γράφω εδώ
*	https://github.com/dionyziz/spoj/blob/master/goodg/lineset.cpp
*	βλέπεις ότι το σώμα του κάθε block βρίσκεται 1 ακριβώς επίπεδο πιο μέσα από τον κώδικα που το ορίζει.
*	Eπίσης ο έλεγχος για την επιτυχία της σύνδεσης στη βάση δεδομένων κολλάει στο sql.php και πουθενά αλλού
*	εδώ πρέπει να μπει
*	https://github.com/pkakelas/NTUA_web_development_seminar/blob/master/4th%2C%205th%20exercise/sql.php
*	εσύ το κάνεις εδώ
*	https://github.com/pkakelas/NTUA_web_development_seminar/blob/master/4th%2C%205th%20exercise/register.php
*	ιδανικά θα πρέπει να μειώσεις όσο μπορείς τις μεταβλητές που "μοιράζονται" αρχεία που γίνονται include μεταξύ τους
	όπως το $con
	διότι αυτό δημιουργεί προβλήματα αναγνωσιμότητας
	βλέπω σε ένα αρχείο μία μεταβλητή $con
	τι είναι αυτή;
	πού να ξέρω
	πρέπει να κοιτάξω όλα τα includes και τα includes των includes
	γι' αυτό το λόγο θα ήταν καλό σε κάθε αρχείο να χρησιμοποιείς μόνο τοπικές μεταβλητές
	και οι καθολικές μεταβλητές σου να είναι πολύ λίγες
	ας πούμε το $con εντάξει ίσως θα μπορούσε να είναι καθολική
	ως σύνδεση στη βάση που χρησιμοποιείται σε πολλά αρχεία
	αλλά κάθε αρχείο θα πρέπει να είναι ΥΠΕΥΘΥΝΟ για τα πράγματά του
	δηλαδή ο κώδικάς σου θα πρέπει να έχει ιδιοκτησία πάνω στις μεταβλητές του
	επίσης κάθε αρχείο θα πρέπει να κάνει μία ΣΥΓΚΕΚΡΙΜΕΝΗ δουλειά
	για παράδειγμα το $con ανήκει στο sql.php
	το sql.php φροντίζει να συνδεθεί στη βάση δεδομένων
	αυτή είναι η δουλειά του
	το register.php όπως το έχεις αυτή τη στιγμή κάνει πολλές διαφορετικές δουλειές
	φροντίζει να γράψει το χρήστη
	αλλά ελέγχει και αν αυτό που έπρεπε να είχε κάνει το sql.php έγινε σωστά
	εδώ μπλέκεις τις ευθύνες των αρχείων και αυτό είναι κακό για τη δομή σου
	επίσης έχεις πλέον δει τα "θέματα δομής"
	οπότε ήρθε ο καιρός να χωρίσεις την εφαρμογή σου σε backend/frontend
	τουλάχιστον
	αν όχι σε MVC
	φερ' ειπείν
	εδώ
	https://github.com/pkakelas/NTUA_web_development_seminar/blob/master/4th%2C%205th%20exercise/list.php
	η ανάγνωση της λίστας των αρχείων από το δίσκο είναι θέμα backend
	όμως η εμφάνισή τους σε ul/li είναι θέμα frontend
	αυτά θα πρέπει να τα ξεχωρίσεις
	εδώ
	https://github.com/pkakelas/NTUA_web_development_seminar/blob/master/4th%2C%205th%20exercise/register.php
	το SQL ερώτημα είναι θέμα backend
	το μήνυμα επιτυχίας είναι θέμα frontend
	αν θες να είσαι πιο αυστηρός στο διαχωρισμό, η πιστοποίηση της ορθότητας των δεδομένων και η ανάγνωσή τους από το POST είναι θέμα controller
	τα μηνύματα επιτυχίας είναι θέμα view
	και τα SQL ερωτήματα είναι θέμα model
	θα σου πρότεινα λοιπόν να φτιάξεις φακέλους models, views, controllers, και να παίξεις αντίστοιχα
	επιπλέον αν πρόκειται να αλλάξεις τη δομή, μην το κάνεις μαζικά
	κάντο σιγά σιγά και σε κάθε βήμα φρόντισε να επιβεβαιώνεις ότι η εφαρμογή σου δουλεύει
	π.χ. ξεκίνα μεταφέροντας ένα SQL ερώτημα στα models
	επιβεβαίωσε ότι συνεχίζει να δουλεύει το register
	και συνέχισε με το επόμενο ερώτημα
	γενικά μην κάνεις "rewrite"
	διότι θα απογοητευτείς και θα κουραστείς
	και στο τέλος μπορεί να μη δουλεύει η εφαρμογή σου
	και να ψάχνεσαι
	επίσης συνεχίζεις να έχεις HTML κώδικα που δεν κάνει validate
	π.χ. στο register.php έχεις
	https://github.com/pkakelas/NTUA_web_development_seminar/blob/master/4th%2C%205th%20exercise/register.php#L36
	τιμή στο href χωρίς εισαγωγικά
	αυτά πρέπει να διορθωθούν


Old Corrections

*	θα σου πρότεινα κατ' αρχάς να ενεργοποιήσεις όλα τα PHP errors
*	και οτιδήποτε warning(και notices) σου βγάζει να το διορθώσεις   
*	ας πούμε θα σου πει στο register.php
*	ότι όταν γράφεις $_POST[name]
*	θα πρέπει να γράφεις αντ' αυτού
*	$_POST['name']
*	διόρθωσε όλα όσα σου βγάζει
*	επίσης παρατηρώ ότι σε πολλά αρχεία έχεις κάνει copy/paste τα ίδια πράγματα
*	http://pragmatictips.com/11
*	αυτό που κάνεις είναι κακό
*	αν π.χ. θες να αλλάξεις τον κωδικό στη MySQL
*	θα πρέπει να τον αλλάξεις σε πολλές διαφορετικές μεριές
*	θα τα έβαζα σε ένα ξεχωριστό include
*	δες αν μπορείς να οργανώσεις την αρχιτεκτονική της εφαρμογής σου καλύτερα γενικότερα.
*	το session_register που κάνεις δεν χρειάζεται
*	στο sign_in.php στη γραμμή 26 έχεις ένα header αφότου στείλεις HTML
*	αυτό είναι λάθος
*	στη γραμμή 29 έχεις echo με στατικό HTML
*	προτίμησε να κλείσεις την PHP
*	else {
*	?><p>Your login name blah</p><?php
*	}
*	 επίσης δεν κάνει validate αυτό διότι ξέχασες τα "" στο href
*	στο href επίσης έχεις localhost hard-coded
*	αν πας και το βάλεις σε κάποιο κανονικό domain αυτό θα πρέπει να αλλάξει παντού
*	διόρθωσέ το και κάνε τα URL σχετικά
*	αντί για απόλυτα
*	στο sign_in.php το mysql_fetch_array που κάνεις είναι λάθος
*	διότι δεν έχεις ελέγξει ΠΡΙΝ αν έχουν επιστραφεί εγγραφές
*	στο list.php έχεις μία λίστα που εναλλάσσονται lis με ονόματα αρχείων και download links
*	αυτό είναι semantically (σημασειολογικά) λάθος στο HTML
*	θέλεις να έχεις λίστα με ομοιοειδή πράγματα
*	θα έφτιαχνα μία λίστα όπου το κάθε li αφορά ενα αρχείο
*	εκεί μέσα θα έβαζα δύο divs, ένα για το όνομα και ένα για το download link, φερ' ειπείν
*	στο download.php έχεις headers με διαφορετικά περιεχόμενα
*	θέλεις το content-type να εξαρτάται από το είδους του αρχείου που στέλνεις
*	τώρα στέλνεις τα πάντα σε όλα
*	το σωστό είναι να στείλεις μόνο ένα content-type
*	επίσης το coding style σου είναι λάθος
*	έχεις θέματα όσο αφορά το indentation
*	π.χ. στη γραμμή 24 του list.php το } έχει λάθος tabs
*	δεν είναι στοιχισμένο
*	ή το echo στη γραμμή 21 αντίστοιχα
*	φρόντισε να είναι όλα απόλυτα σωστά
*	και ο κώδικάς σου καθαρός
*	δες καθαρό κώδικα
*	https://github.com/dionyziz/Automata/blob/master/js/render.js
*	δες κι άλλο καθαρό κώδικα
*	https://github.com/dionyziz/zino/blob/master/phoenix/libs/album.php
*	στο τελευταίο αρχείο έχουν δουλέψει 5 διαφορετικοί άνθρωποι
*	αλλά είναι καθαρό και οργανωμένο
*	έτσι θα πρέπει να γράφεις κι εσύ
*	θα ήθελα επίσης να αλλάξεις όλα τα ονόματα των πεδίων στους πίνακες σε πεζά
*	να χρησιμοποιείς 4 κενά για indentation
*	(ρύθμισέ τον editor σου ώστε όταν πατάς tab να βάζει 4 κενά)